; ModuleID = 'mycompiler'
source_filename = "mycompiler"
target triple = "x86_64-pc-linux-gnu"

@global_scope_def = global { [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} } zeroinitializer

define void @main() {
entry:
  %malloccall = tail call i8* @malloc(i32 12)
  store i8* %malloccall, i8** bitcast ([0 x [2 x i16]]** getelementptr inbounds ({ [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }, { [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }* @global_scope_def, i64 0, i32 2) to i8**), align 8
  %malloccall1 = tail call i8* @malloc(i32 4)
  store i8* %malloccall1, i8** bitcast ({ [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }* @global_scope_def to i8**), align 16
  store i8 112, i8* getelementptr inbounds ({ [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }, { [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }* @global_scope_def, i64 0, i32 1, i64 0), align 8
  %array_element_gep4 = getelementptr i8, i8* %malloccall, i64 6
  %0 = bitcast i8* %array_element_gep4 to i16*
  store i16 2, i16* %0, align 2
  store i16 4, i16* getelementptr inbounds ({ [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }, { [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }* @global_scope_def, i64 0, i32 5), align 2
  store i16 5, i16* getelementptr inbounds ({ [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }, { [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }* @global_scope_def, i64 0, i32 4), align 16
  call void @a1(i16* getelementptr inbounds ({ [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }, { [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }* @global_scope_def, i64 0, i32 4), { [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }* nonnull @global_scope_def)
  %i6 = load i16, i16* getelementptr inbounds ({ [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }, { [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }* @global_scope_def, i64 0, i32 4), align 16
  call void @writeInteger(i16 %i6)
  %"\0A8" = alloca [3 x i8], align 1
  %"\0A8.repack" = getelementptr inbounds [3 x i8], [3 x i8]* %"\0A8", i64 0, i64 0
  store i8 10, i8* %"\0A8.repack", align 1
  %"\0A8.repack41" = getelementptr inbounds [3 x i8], [3 x i8]* %"\0A8", i64 0, i64 1
  store i8 0, i8* %"\0A8.repack41", align 1
  %"\0A8.repack42" = getelementptr inbounds [3 x i8], [3 x i8]* %"\0A8", i64 0, i64 2
  store i8 0, i8* %"\0A8.repack42", align 1
  %str_cast9 = bitcast [3 x i8]* %"\0A8" to [0 x i8]*
  call void @writeString([0 x i8]* nonnull %str_cast9)
  %n14 = load [0 x [2 x i16]]*, [0 x [2 x i16]]** getelementptr inbounds ({ [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }, { [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }* @global_scope_def, i64 0, i32 2), align 8
  %array_element_gep16 = getelementptr [0 x [2 x i16]], [0 x [2 x i16]]* %n14, i64 0, i64 1, i64 1
  %array_element17 = load i16, i16* %array_element_gep16, align 2
  call void @writeInteger(i16 %array_element17)
  %"asd " = alloca [7 x i8], align 1
  %"asd .repack" = getelementptr inbounds [7 x i8], [7 x i8]* %"asd ", i64 0, i64 0
  store i8 97, i8* %"asd .repack", align 1
  %"asd .repack43" = getelementptr inbounds [7 x i8], [7 x i8]* %"asd ", i64 0, i64 1
  store i8 115, i8* %"asd .repack43", align 1
  %"asd .repack44" = getelementptr inbounds [7 x i8], [7 x i8]* %"asd ", i64 0, i64 2
  store i8 100, i8* %"asd .repack44", align 1
  %"asd .repack45" = getelementptr inbounds [7 x i8], [7 x i8]* %"asd ", i64 0, i64 3
  store i8 32, i8* %"asd .repack45", align 1
  %"asd .repack46" = getelementptr inbounds [7 x i8], [7 x i8]* %"asd ", i64 0, i64 4
  store i8 0, i8* %"asd .repack46", align 1
  %"asd .repack47" = getelementptr inbounds [7 x i8], [7 x i8]* %"asd ", i64 0, i64 5
  store i8 0, i8* %"asd .repack47", align 1
  %"asd .repack48" = getelementptr inbounds [7 x i8], [7 x i8]* %"asd ", i64 0, i64 6
  store i8 0, i8* %"asd .repack48", align 1
  store [7 x i8]* %"asd ", [7 x i8]** bitcast ({ [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }* @global_scope_def to [7 x i8]**), align 16
  %"Hello 22" = alloca [8 x i8], align 1
  %"Hello 22.repack" = getelementptr inbounds [8 x i8], [8 x i8]* %"Hello 22", i64 0, i64 0
  store i8 72, i8* %"Hello 22.repack", align 1
  %"Hello 22.repack49" = getelementptr inbounds [8 x i8], [8 x i8]* %"Hello 22", i64 0, i64 1
  store i8 101, i8* %"Hello 22.repack49", align 1
  %"Hello 22.repack50" = getelementptr inbounds [8 x i8], [8 x i8]* %"Hello 22", i64 0, i64 2
  store i8 108, i8* %"Hello 22.repack50", align 1
  %"Hello 22.repack51" = getelementptr inbounds [8 x i8], [8 x i8]* %"Hello 22", i64 0, i64 3
  store i8 108, i8* %"Hello 22.repack51", align 1
  %"Hello 22.repack52" = getelementptr inbounds [8 x i8], [8 x i8]* %"Hello 22", i64 0, i64 4
  store i8 111, i8* %"Hello 22.repack52", align 1
  %"Hello 22.repack53" = getelementptr inbounds [8 x i8], [8 x i8]* %"Hello 22", i64 0, i64 5
  store i8 32, i8* %"Hello 22.repack53", align 1
  %"Hello 22.repack54" = getelementptr inbounds [8 x i8], [8 x i8]* %"Hello 22", i64 0, i64 6
  store i8 0, i8* %"Hello 22.repack54", align 1
  %"Hello 22.repack55" = getelementptr inbounds [8 x i8], [8 x i8]* %"Hello 22", i64 0, i64 7
  store i8 0, i8* %"Hello 22.repack55", align 1
  %str_cast23 = bitcast [8 x i8]* %"Hello 22" to [0 x i8]*
  call void @writeString([0 x i8]* nonnull %str_cast23)
  %c25 = load [0 x i8]*, [0 x i8]** getelementptr inbounds ({ [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }, { [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }* @global_scope_def, i64 0, i32 0), align 16
  call void @writeString([0 x i8]* %c25)
  %c26 = load [0 x i8]*, [0 x i8]** getelementptr inbounds ({ [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }, { [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }* @global_scope_def, i64 0, i32 0), align 16
  %array_element_gep27 = getelementptr [0 x i8], [0 x i8]* %c26, i64 0, i64 0
  store i8 10, i8* %array_element_gep27, align 1
  %c32 = load [0 x i8]*, [0 x i8]** getelementptr inbounds ({ [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }, { [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }* @global_scope_def, i64 0, i32 0), align 16
  %array_element_gep33 = getelementptr [0 x i8], [0 x i8]* %c32, i64 0, i64 4
  %array_element34 = load i8, i8* %array_element_gep33, align 1
  call void @writeChar(i8 %array_element34)
  %c38 = load [0 x i8]*, [0 x i8]** getelementptr inbounds ({ [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }, { [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }* @global_scope_def, i64 0, i32 0), align 16
  call void @writeString([0 x i8]* %c38)
  call void @writeChar(i8 10)
  call void @writeChar(i8 97)
  ret void
}

declare void @writeInteger(i16)

declare void @writeBoolean(i1)

declare void @writeChar(i8)

declare void @writeReal(x86_fp80)

declare void @writeString([0 x i8]*)

declare i16 @readInteger()

declare i1 @readBoolean()

declare i8 @readChar()

declare x86_fp80 @readReal()

declare void @readString(i16, [0 x i8]*)

declare i16 @abs(i16)

declare x86_fp80 @fabs(x86_fp80)

declare x86_fp80 @sqrt(x86_fp80)

declare x86_fp80 @sin(x86_fp80)

declare x86_fp80 @cos(x86_fp80)

declare x86_fp80 @tan(x86_fp80)

declare x86_fp80 @arctan(x86_fp80)

declare x86_fp80 @exp(x86_fp80)

declare x86_fp80 @ln(x86_fp80)

declare x86_fp80 @pi()

declare i16 @trunc(x86_fp80)

declare i16 @round(x86_fp80)

declare i16 @ord(i8)

declare i8 @chr(i16)

define void @a1(i16* %i, { [0 x i8]*, [32 x i8], [0 x [2 x i16]]*, x86_fp80, i16, i16, {} }* %pscope) {
entry:
  %i5 = load i16, i16* %i, align 2
  %iaddtmp = add i16 %i5, 1
  store i16 %iaddtmp, i16* %i, align 2
  ret void
}

declare noalias i8* @malloc(i32)
